<div class="lfr-layout-structure-item-1fcb12ec-27eb-ca93-cdd3-ee783fe07aba lfr-layout-structure-item-container " data-layout-structure-item-id="1fcb12ec-27eb-ca93-cdd3-ee783fe07aba"><div class="lfr-layout-structure-item-89aa1972-cd2b-d50f-ef35-20e7f05646bb lfr-layout-structure-item-container  container-fluid container-fluid-max-xl" data-layout-structure-item-id="89aa1972-cd2b-d50f-ef35-20e7f05646bb"><div class="lfr-layout-structure-item-deal-constellation lfr-layout-structure-item-a8d6bf15-127b-0243-97a7-d8498ae03422 " data-layout-structure-item-id="a8d6bf15-127b-0243-97a7-d8498ae03422"><div id="fragment-404b8dff-e7a9-ee88-64cf-d5a8b03755c7"> <div id="wrapper" class="deal-constellation-container">
  <div data-lfr-editable-id="title" data-lfr-editable-type="rich-text">
    <h2 class="constellation-title">Deal Universe</h2>
  </div>
  <div data-lfr-editable-id="description" data-lfr-editable-type="rich-text">
    <p class="constellation-description">Explore your deal portfolio as a galaxy of glowing stars, with size representing value and colors indicating status.</p>
  </div>
</div>

<div class="universe-viewport">
  <!-- Star Field Background -->
  <div class="star-field">
    <div class="distant-stars"></div>
  </div>
  
  <!-- Constellation Canvas -->
  <div class="constellation-canvas star-animation-intense" id="constellationCanvas"><div class="deal-star size-mega star-qualified" style="left: 591.761px; top: 143.509px;"></div><div class="deal-star size-mega star-proposal" style="left: 211.791px; top: 261.649px;"></div><div class="deal-star size-mega star-closedwon" style="left: 403.843px; top: 223.915px;"></div><div class="deal-star size-mega star-qualified" style="left: 597.244px; top: 144.758px;"></div><div class="deal-star size-mega star-closedlost" style="left: 257.858px; top: 156.469px;"></div><div class="deal-star size-mega star-qualified" style="left: 542.439px; top: 137.956px;"></div><div class="deal-star size-mega star-negotiation" style="left: 611.992px; top: 305.912px;"></div><div class="deal-star size-mega star-negotiation" style="left: 545.711px; top: 273.02px;"></div><div class="deal-star size-mega star-proposal" style="left: 224.05px; top: 302.389px;"></div><div class="deal-star size-mega star-closedlost" style="left: 231.858px; top: 183.917px;"></div><div class="deal-star size-mega star-qualified" style="left: 587.644px; top: 147.127px;"></div><div class="deal-star size-mega star-negotiation" style="left: 597.133px; top: 261.845px;"></div><div class="deal-star size-mega star-negotiation" style="left: 588.358px; top: 298.539px;"></div><div class="deal-star size-mega star-closedwon" style="left: 369.707px; top: 259.045px;"></div><div class="deal-star size-mega star-closedwon" style="left: 365.982px; top: 188.62px;"></div><div class="deal-star size-mega star-closedlost" style="left: 209.105px; top: 194.314px;"></div><div class="deal-star size-mega star-negotiation" style="left: 592.813px; top: 263.249px;"></div><div class="deal-star size-mega star-proposal" style="left: 219.014px; top: 317.443px;"></div><div class="deal-star size-mega star-proposal" style="left: 180.613px; top: 262.696px;"></div><div class="deal-star size-mega star-qualified" style="left: 555.362px; top: 99.3822px;"></div><div class="deal-star size-mega star-closedwon" style="left: 387.01px; top: 264.494px;"></div><div class="deal-star size-mega star-closedlost" style="left: 240.219px; top: 180.282px;"></div><div class="deal-star size-mega star-qualified" style="left: 550.759px; top: 189.882px;"></div><div class="deal-star size-mega star-closedlost" style="left: 225.335px; top: 161.816px;"></div><div class="deal-star size-mega star-qualified" style="left: 584.66px; top: 138.402px;"></div><div class="deal-star size-mega star-closedwon" style="left: 405.98px; top: 225.377px;"></div><div class="deal-star size-mega star-negotiation" style="left: 555.534px; top: 303.997px;"></div><div class="deal-star size-mega star-closedlost" style="left: 237.494px; top: 175.931px;"></div><div class="deal-star size-mega star-qualified" style="left: 625.779px; top: 176.604px;"></div><div class="deal-star size-mega star-qualified" style="left: 547.379px; top: 152.222px;"></div><div class="deal-star size-mega star-qualified" style="left: 592.879px; top: 123.164px;"></div><div class="deal-star size-mega star-closedlost" style="left: 260.347px; top: 179.247px;"></div><div class="deal-star size-mega star-closedlost" style="left: 205.887px; top: 195.236px;"></div><div class="deal-star size-mega star-qualified" style="left: 631.897px; top: 134.082px;"></div><div class="deal-star size-mega star-closedwon" style="left: 368.327px; top: 188.763px;"></div><div class="deal-star size-mega star-closedwon" style="left: 421.173px; top: 182.513px;"></div><div class="deal-star size-mega star-closedlost" style="left: 165.617px; top: 168.285px;"></div><div class="deal-star size-mega star-closedwon" style="left: 437.432px; top: 198.654px;"></div><div class="deal-star size-mega star-proposal" style="left: 214.761px; top: 300.437px;"></div><div class="deal-star size-mega star-proposal" style="left: 242.848px; top: 301.838px;"></div><div class="deal-star size-mega star-closedwon" style="left: 388.754px; top: 218.635px;"></div><div class="deal-star size-mega star-closedlost" style="left: 224.864px; top: 130.672px;"></div><div class="deal-star size-mega star-negotiation" style="left: 599.715px; top: 335.437px;"></div><div class="deal-star size-mega star-proposal" style="left: 266.707px; top: 309.466px;"></div><div class="deal-star size-mega star-closedwon" style="left: 388.572px; top: 218.449px;"></div><div class="deal-star size-mega star-proposal" style="left: 254.105px; top: 270.862px;"></div><div class="deal-star size-mega star-closedwon" style="left: 413.39px; top: 192.586px;"></div><div class="deal-star size-mega star-closedlost" style="left: 211.585px; top: 139.025px;"></div><div class="deal-star size-mega star-negotiation" style="left: 615.028px; top: 263.383px;"></div><div class="deal-star size-mega star-closedlost" style="left: 207.452px; top: 164.051px;"></div><div class="deal-star size-mega star-negotiation" style="left: 638.633px; top: 326.463px;"></div><div class="deal-star size-mega star-proposal" style="left: 214.916px; top: 278.577px;"></div><div class="deal-star size-mega star-proposal" style="left: 252.799px; top: 334.321px;"></div><div class="deal-star size-mega star-closedlost" style="left: 219.264px; top: 117.435px;"></div><div class="deal-star size-mega star-proposal" style="left: 216.011px; top: 302.49px;"></div><div class="deal-star size-mega star-proposal" style="left: 248.285px; top: 268.37px;"></div><div class="deal-star size-mega star-negotiation" style="left: 592.994px; top: 304.42px;"></div><div class="deal-star size-mega star-negotiation" style="left: 601.747px; top: 300.688px;"></div><div class="deal-star size-mega star-closedlost" style="left: 259.189px; top: 110.467px;"></div><div class="deal-star size-mega star-closedlost" style="left: 215.535px; top: 145.937px;"></div><div class="deal-star size-mega star-proposal" style="left: 202.741px; top: 296.406px;"></div><div class="deal-star size-mega star-closedlost" style="left: 182.128px; top: 108.758px;"></div><div class="deal-star size-mega star-negotiation" style="left: 543.747px; top: 276.056px;"></div><div class="deal-star size-mega star-qualified" style="left: 616.953px; top: 159.356px;"></div><div class="deal-star size-mega star-negotiation" style="left: 564.077px; top: 250.924px;"></div><div class="deal-star size-mega star-closedwon" style="left: 432.19px; top: 236.927px;"></div><div class="deal-star size-mega star-proposal" style="left: 230.071px; top: 328.845px;"></div><div class="deal-star size-mega star-closedwon" style="left: 387.944px; top: 260.14px;"></div><div class="deal-star size-mega star-qualified" style="left: 599.488px; top: 149.309px;"></div><div class="deal-star size-mega star-proposal" style="left: 204.706px; top: 293.281px;"></div><div class="deal-star size-mega star-closedwon" style="left: 400.548px; top: 217.495px;"></div><div class="deal-star size-mega star-negotiation" style="left: 624.203px; top: 306.731px;"></div><div class="deal-star size-mega star-qualified" style="left: 590.015px; top: 133.091px;"></div><div class="deal-star size-mega star-closedwon" style="left: 406.291px; top: 229.911px;"></div><div class="deal-star size-mega star-proposal" style="left: 204.606px; top: 293.323px;"></div><div class="deal-star size-mega star-qualified" style="left: 582.298px; top: 142.134px;"></div><div class="deal-star size-mega star-proposal" style="left: 161.455px; top: 301.853px;"></div><div class="deal-star size-mega star-qualified" style="left: 590.121px; top: 148.656px;"></div><div class="deal-star size-mega star-qualified" style="left: 615.706px; top: 107.11px;"></div><div class="deal-star size-mega star-closedwon" style="left: 408.775px; top: 208.923px;"></div><div class="deal-star size-mega star-negotiation" style="left: 585.569px; top: 268.804px;"></div><div class="deal-star size-mega star-closedwon" style="left: 397.328px; top: 235.129px;"></div><div class="deal-star size-mega star-closedwon" style="left: 404.105px; top: 226.499px;"></div><div class="deal-star size-mega star-negotiation" style="left: 585.125px; top: 303.412px;"></div><div class="deal-star size-mega star-closedwon" style="left: 404.365px; top: 225.446px;"></div><div class="deal-star size-mega star-proposal" style="left: 221.506px; top: 247.151px;"></div><div class="deal-star size-mega star-closedwon" style="left: 405.32px; top: 210.131px;"></div><div class="deal-star size-mega star-qualified" style="left: 581.54px; top: 115.478px;"></div><div class="deal-star size-mega star-closedlost" style="left: 225.594px; top: 185.238px;"></div><div class="deal-star size-mega star-qualified" style="left: 609.448px; top: 180.311px;"></div><div class="deal-star size-mega star-closedwon" style="left: 412.524px; top: 215.903px;"></div><div class="deal-star size-mega star-qualified" style="left: 599.796px; top: 151.436px;"></div><div class="deal-star size-mega star-proposal" style="left: 215.068px; top: 268.355px;"></div><div class="deal-star size-mega star-closedlost" style="left: 209.622px; top: 162.7px;"></div><div class="deal-star size-mega star-closedwon" style="left: 401.934px; top: 233.363px;"></div><div class="deal-star size-mega star-proposal" style="left: 239.682px; top: 349.704px;"></div><div class="deal-star size-mega star-negotiation" style="left: 548.176px; top: 309.257px;"></div><div class="deal-star size-mega star-closedwon" style="left: 411.642px; top: 225.644px;"></div><div class="deal-star size-mega star-negotiation" style="left: 576.259px; top: 318.952px;"></div><div class="deal-star size-mega star-closedlost" style="left: 168.115px; top: 155.233px;"></div><div class="deal-star size-mega star-closedwon" style="left: 400.922px; top: 217.16px;"></div><div class="deal-star size-mega star-closedwon" style="left: 454.798px; top: 222.951px;"></div><div class="deal-star size-mega star-proposal" style="left: 246.666px; top: 313.904px;"></div><div class="deal-star size-mega star-negotiation" style="left: 600.356px; top: 301.603px;"></div><div class="deal-star size-mega star-proposal" style="left: 159.147px; top: 318.546px;"></div><div class="deal-star size-mega star-closedwon" style="left: 421.745px; top: 228.604px;"></div><div class="deal-star size-mega star-closedwon" style="left: 398.983px; top: 235.189px;"></div><div class="deal-star size-mega star-negotiation" style="left: 628.867px; top: 265.286px;"></div><div class="deal-star size-mega star-negotiation" style="left: 607.643px; top: 259.79px;"></div><div class="deal-star size-mega star-closedlost" style="left: 198.014px; top: 135.258px;"></div><div class="deal-star size-mega star-closedwon" style="left: 398.496px; top: 218.539px;"></div><div class="deal-star size-mega star-closedwon" style="left: 425.747px; top: 259.645px;"></div><div class="deal-star size-mega star-qualified" style="left: 556.516px; top: 137.891px;"></div><div class="deal-star size-mega star-proposal" style="left: 227.329px; top: 328.516px;"></div><div class="deal-star size-mega star-negotiation" style="left: 601.418px; top: 334.801px;"></div><div class="deal-star size-mega star-negotiation" style="left: 584.811px; top: 302.044px;"></div><div class="deal-star size-mega star-qualified" style="left: 539.505px; top: 168.135px;"></div><div class="deal-star size-mega star-closedwon" style="left: 418.014px; top: 212.608px;"></div><div class="deal-star size-mega star-qualified" style="left: 592.886px; top: 150.256px;"></div><div class="deal-star size-mega star-negotiation" style="left: 576.146px; top: 344.494px;"></div><div class="deal-star size-mega star-qualified" style="left: 563.337px; top: 126.727px;"></div><div class="deal-star size-mega star-proposal" style="left: 215.416px; top: 325.039px;"></div><div class="deal-star size-mega star-closedwon" style="left: 392.245px; top: 223.713px;"></div><div class="deal-star size-mega star-qualified" style="left: 604.746px; top: 177.319px;"></div></div>
  
  <!-- Connection Lines -->
  <svg class="connection-svg" id="connectionSvg" style="display: block;"><line x1="603.7606104888949" y1="155.50855375072928" x2="575.3367926329394" y2="138.72713005641236" class="connection-line strong"></line><line x1="223.7906617917136" y1="273.64860674280413" x2="252.21916840148592" y2="192.28218113426422" class="connection-line strong"></line><line x1="223.7906617917136" y1="273.64860674280413" x2="449.4320423965695" y2="210.6535186586567" class="connection-line strong"></line><line x1="223.7906617917136" y1="273.64860674280413" x2="466.7979663187151" y2="234.95129438005645" class="connection-line strong"></line><line x1="223.7906617917136" y1="273.64860674280413" x2="619.6434971152273" y2="271.78963577148966" class="connection-line strong"></line><line x1="223.7906617917136" y1="273.64860674280413" x2="227.41593022479927" y2="337.0393381628683" class="connection-line strong"></line><line x1="252.21916840148592" y1="192.28218113426422" x2="449.4320423965695" y2="210.6535186586567" class="connection-line strong"></line><line x1="252.21916840148592" y1="192.28218113426422" x2="466.7979663187151" y2="234.95129438005645" class="connection-line strong"></line><line x1="252.21916840148592" y1="192.28218113426422" x2="619.6434971152273" y2="271.78963577148966" class="connection-line strong"></line><line x1="252.21916840148592" y1="192.28218113426422" x2="227.41593022479927" y2="337.0393381628683" class="connection-line strong"></line><line x1="449.4320423965695" y1="210.6535186586567" x2="466.7979663187151" y2="234.95129438005645" class="connection-line strong"></line><line x1="449.4320423965695" y1="210.6535186586567" x2="619.6434971152273" y2="271.78963577148966" class="connection-line strong"></line><line x1="449.4320423965695" y1="210.6535186586567" x2="227.41593022479927" y2="337.0393381628683" class="connection-line strong"></line><line x1="466.7979663187151" y1="234.95129438005645" x2="619.6434971152273" y2="271.78963577148966" class="connection-line strong"></line><line x1="466.7979663187151" y1="234.95129438005645" x2="227.41593022479927" y2="337.0393381628683" class="connection-line strong"></line><line x1="619.6434971152273" y1="271.78963577148966" x2="227.41593022479927" y2="337.0393381628683" class="connection-line strong"></line><line x1="415.8434361416129" y1="235.91458745838113" x2="269.8584442444851" y2="168.46941000405653" class="connection-line strong"></line><line x1="415.8434361416129" y1="235.91458745838113" x2="404.2449986224543" y2="235.712751256498" class="connection-line strong"></line><line x1="269.8584442444851" y1="168.46941000405653" x2="404.2449986224543" y2="235.712751256498" class="connection-line strong"></line><line x1="609.2444611750572" y1="156.75795478472344" x2="226.76130208271226" y2="312.4365966629047" class="connection-line strong"></line><line x1="609.2444611750572" y1="156.75795478472344" x2="420.77471966731014" y2="220.92292138517786" class="connection-line strong"></line><line x1="609.2444611750572" y1="156.75795478472344" x2="616.7456413966082" y2="189.31874525664864" class="connection-line strong"></line><line x1="226.76130208271226" y1="312.4365966629047" x2="420.77471966731014" y2="220.92292138517786" class="connection-line strong"></line><line x1="226.76130208271226" y1="312.4365966629047" x2="616.7456413966082" y2="189.31874525664864" class="connection-line strong"></line><line x1="420.77471966731014" y1="220.92292138517786" x2="616.7456413966082" y2="189.31874525664864" class="connection-line strong"></line><line x1="554.4388548100846" y1="149.9563192462121" x2="599.6442779755312" y2="159.12719558145358" class="connection-line strong"></line><line x1="554.4388548100846" y1="149.9563192462121" x2="377.98219015109026" y2="200.6196521095197" class="connection-line strong"></line><line x1="554.4388548100846" y1="149.9563192462121" x2="604.8125599375862" y2="275.2491828552571" class="connection-line strong"></line><line x1="554.4388548100846" y1="149.9563192462121" x2="260.28515262312783" y2="280.3703099965092" class="connection-line strong"></line><line x1="554.4388548100846" y1="149.9563192462121" x2="594.2979443121266" y2="154.1338223311383" class="connection-line strong"></line><line x1="554.4388548100846" y1="149.9563192462121" x2="612.3564953603089" y2="313.60344491268415" class="connection-line strong"></line><line x1="599.6442779755312" y1="159.12719558145358" x2="377.98219015109026" y2="200.6196521095197" class="connection-line strong"></line><line x1="599.6442779755312" y1="159.12719558145358" x2="604.8125599375862" y2="275.2491828552571" class="connection-line strong"></line><line x1="599.6442779755312" y1="159.12719558145358" x2="260.28515262312783" y2="280.3703099965092" class="connection-line strong"></line><line x1="599.6442779755312" y1="159.12719558145358" x2="594.2979443121266" y2="154.1338223311383" class="connection-line strong"></line><line x1="599.6442779755312" y1="159.12719558145358" x2="612.3564953603089" y2="313.60344491268415" class="connection-line strong"></line><line x1="377.98219015109026" y1="200.6196521095197" x2="604.8125599375862" y2="275.2491828552571" class="connection-line strong"></line><line x1="377.98219015109026" y1="200.6196521095197" x2="260.28515262312783" y2="280.3703099965092" class="connection-line strong"></line><line x1="377.98219015109026" y1="200.6196521095197" x2="594.2979443121266" y2="154.1338223311383" class="connection-line strong"></line><line x1="377.98219015109026" y1="200.6196521095197" x2="612.3564953603089" y2="313.60344491268415" class="connection-line strong"></line><line x1="604.8125599375862" y1="275.2491828552571" x2="260.28515262312783" y2="280.3703099965092" class="connection-line strong"></line><line x1="604.8125599375862" y1="275.2491828552571" x2="594.2979443121266" y2="154.1338223311383" class="connection-line strong"></line><line x1="604.8125599375862" y1="275.2491828552571" x2="612.3564953603089" y2="313.60344491268415" class="connection-line strong"></line><line x1="260.28515262312783" y1="280.3703099965092" x2="594.2979443121266" y2="154.1338223311383" class="connection-line strong"></line><line x1="260.28515262312783" y1="280.3703099965092" x2="612.3564953603089" y2="313.60344491268415" class="connection-line strong"></line><line x1="594.2979443121266" y1="154.1338223311383" x2="612.3564953603089" y2="313.60344491268415" class="connection-line strong"></line><line x1="557.7112466700895" y1="285.02040807085166" x2="381.7067247347471" y2="271.0453335779283" class="connection-line strong"></line><line x1="557.7112466700895" y1="285.02040807085166" x2="231.01410145546467" y2="329.4429005470097" class="connection-line strong"></line><line x1="557.7112466700895" y1="285.02040807085166" x2="177.6174734280655" y2="180.28544101822013" class="connection-line strong"></line><line x1="557.7112466700895" y1="285.02040807085166" x2="236.86448866489172" y2="142.67168423761427" class="connection-line strong"></line><line x1="381.7067247347471" y1="271.0453335779283" x2="231.01410145546467" y2="329.4429005470097" class="connection-line strong"></line><line x1="381.7067247347471" y1="271.0453335779283" x2="177.6174734280655" y2="180.28544101822013" class="connection-line strong"></line><line x1="381.7067247347471" y1="271.0453335779283" x2="236.86448866489172" y2="142.67168423761427" class="connection-line strong"></line><line x1="231.01410145546467" y1="329.4429005470097" x2="177.6174734280655" y2="180.28544101822013" class="connection-line strong"></line><line x1="231.01410145546467" y1="329.4429005470097" x2="236.86448866489172" y2="142.67168423761427" class="connection-line strong"></line><line x1="177.6174734280655" y1="180.28544101822013" x2="236.86448866489172" y2="142.67168423761427" class="connection-line strong"></line><line x1="236.05026782992516" y1="314.388544831347" x2="636.202875025692" y2="318.7312176482012" class="connection-line strong"></line><line x1="236.05026782992516" y1="314.388544831347" x2="602.0153619824439" y2="145.0910550572628" class="connection-line strong"></line><line x1="236.05026782992516" y1="314.388544831347" x2="171.14656055363997" y2="330.5464713930595" class="connection-line strong"></line><line x1="236.05026782992516" y1="314.388544831347" x2="410.98315050178076" y2="247.1894601967636" class="connection-line strong"></line><line x1="636.202875025692" y1="318.7312176482012" x2="602.0153619824439" y2="145.0910550572628" class="connection-line strong"></line><line x1="636.202875025692" y1="318.7312176482012" x2="171.14656055363997" y2="330.5464713930595" class="connection-line strong"></line><line x1="636.202875025692" y1="318.7312176482012" x2="410.98315050178076" y2="247.1894601967636" class="connection-line strong"></line><line x1="602.0153619824439" y1="145.0910550572628" x2="171.14656055363997" y2="330.5464713930595" class="connection-line strong"></line><line x1="602.0153619824439" y1="145.0910550572628" x2="410.98315050178076" y2="247.1894601967636" class="connection-line strong"></line><line x1="171.14656055363997" y1="330.5464713930595" x2="410.98315050178076" y2="247.1894601967636" class="connection-line strong"></line><line x1="243.8576733931003" y1="195.9168545565807" x2="412.92248343310837" y2="229.1595825510461" class="connection-line strong"></line><line x1="243.8576733931003" y1="195.9168545565807" x2="596.8110326224321" y2="314.04355200245163" class="connection-line strong"></line><line x1="412.92248343310837" y1="229.1595825510461" x2="596.8110326224321" y2="314.04355200245163" class="connection-line strong"></line><line x1="609.132620379967" y1="273.8447236111697" x2="593.5403339934117" y2="127.47774197285094" class="connection-line strong"></line><line x1="600.357980451353" y1="310.53881007204524" x2="237.33513604286233" y2="173.8164041285558" class="connection-line strong"></line><line x1="600.357980451353" y1="310.53881007204524" x2="650.6327085164031" y2="338.463190310226" class="connection-line strong"></line><line x1="600.357980451353" y1="310.53881007204524" x2="228.01054195844463" y2="314.49039453308905" class="connection-line strong"></line><line x1="600.357980451353" y1="310.53881007204524" x2="597.1247102431256" y2="315.4117113277425" class="connection-line strong"></line><line x1="237.33513604286233" y1="173.8164041285558" x2="650.6327085164031" y2="338.463190310226" class="connection-line strong"></line><line x1="237.33513604286233" y1="173.8164041285558" x2="228.01054195844463" y2="314.49039453308905" class="connection-line strong"></line><line x1="237.33513604286233" y1="173.8164041285558" x2="597.1247102431256" y2="315.4117113277425" class="connection-line strong"></line><line x1="650.6327085164031" y1="338.463190310226" x2="228.01054195844463" y2="314.49039453308905" class="connection-line strong"></line><line x1="650.6327085164031" y1="338.463190310226" x2="597.1247102431256" y2="315.4117113277425" class="connection-line strong"></line><line x1="228.01054195844463" y1="314.49039453308905" x2="597.1247102431256" y2="315.4117113277425" class="connection-line strong"></line><line x1="221.10534904695268" y1="206.3143320085004" x2="217.8871376603745" y2="207.2355085175957" class="connection-line strong"></line><line x1="221.10534904695268" y1="206.3143320085004" x2="613.7472277937541" y2="312.6877945896914" class="connection-line strong"></line><line x1="217.8871376603745" y1="207.2355085175957" x2="613.7472277937541" y2="312.6877945896914" class="connection-line strong"></line><line x1="192.6133740444847" y1="274.6962270171573" x2="417.98001306177235" y2="237.37738232507712" class="connection-line strong"></line><line x1="567.3624202967276" y1="111.38219289971904" x2="272.3468654614644" y2="191.2465566860861" class="connection-line strong"></line><line x1="399.00988926216644" y1="276.4938520131343" x2="444.1896877750596" y2="248.92721808583323" class="connection-line strong"></line><line x1="399.00988926216644" y1="276.4938520131343" x2="560.1755343932879" y2="321.2566666713147" class="connection-line strong"></line><line x1="444.1896877750596" y1="248.92721808583323" x2="560.1755343932879" y2="321.2566666713147" class="connection-line strong"></line><line x1="562.7590327873195" y1="201.88175564263705" x2="400.5723721023478" y2="230.44910459368845" class="connection-line strong"></line><line x1="562.7590327873195" y1="201.88175564263705" x2="223.58465459027877" y2="151.02531002806688" class="connection-line strong"></line><line x1="562.7590327873195" y1="201.88175564263705" x2="576.0768014934284" y2="262.9240092078931" class="connection-line strong"></line><line x1="562.7590327873195" y1="201.88175564263705" x2="413.934465967557" y2="245.36333473684664" class="connection-line strong"></line><line x1="562.7590327873195" y1="201.88175564263705" x2="210.01408821723925" y2="147.2576306383976" class="connection-line strong"></line><line x1="400.5723721023478" y1="230.44910459368845" x2="223.58465459027877" y2="151.02531002806688" class="connection-line strong"></line><line x1="400.5723721023478" y1="230.44910459368845" x2="576.0768014934284" y2="262.9240092078931" class="connection-line strong"></line><line x1="400.5723721023478" y1="230.44910459368845" x2="413.934465967557" y2="245.36333473684664" class="connection-line strong"></line><line x1="400.5723721023478" y1="230.44910459368845" x2="210.01408821723925" y2="147.2576306383976" class="connection-line strong"></line><line x1="223.58465459027877" y1="151.02531002806688" x2="576.0768014934284" y2="262.9240092078931" class="connection-line strong"></line><line x1="223.58465459027877" y1="151.02531002806688" x2="413.934465967557" y2="245.36333473684664" class="connection-line strong"></line><line x1="223.58465459027877" y1="151.02531002806688" x2="210.01408821723925" y2="147.2576306383976" class="connection-line strong"></line><line x1="576.0768014934284" y1="262.9240092078931" x2="413.934465967557" y2="245.36333473684664" class="connection-line strong"></line><line x1="576.0768014934284" y1="262.9240092078931" x2="210.01408821723925" y2="147.2576306383976" class="connection-line strong"></line><line x1="413.934465967557" y1="245.36333473684664" x2="210.01408821723925" y2="147.2576306383976" class="connection-line strong"></line><line x1="596.6601280786361" y1="150.40221934662026" x2="621.4480308032345" y2="192.31140882198105" class="connection-line strong"></line><line x1="596.6601280786361" y1="150.40221934662026" x2="430.0139241061833" y2="224.60756245702456" class="connection-line strong"></line><line x1="621.4480308032345" y1="192.31140882198105" x2="430.0139241061833" y2="224.60756245702456" class="connection-line strong"></line><line x1="249.49426817297322" y1="187.93095823063504" x2="271.1893542997941" y2="122.46744817992933" class="connection-line strong"></line><line x1="249.49426817297322" y1="187.93095823063504" x2="418.29092248601904" y2="241.91106352958187" class="connection-line strong"></line><line x1="271.1893542997941" y1="122.46744817992933" x2="418.29092248601904" y2="241.91106352958187" class="connection-line strong"></line><line x1="637.7789474137683" y1="188.6035367261252" x2="425.3900247138976" y2="204.58624166985055" class="connection-line strong"></line><line x1="637.7789474137683" y1="188.6035367261252" x2="216.6062984388335" y2="305.32262196376234" class="connection-line strong"></line><line x1="425.3900247138976" y1="204.58624166985055" x2="216.6062984388335" y2="305.32262196376234" class="connection-line strong"></line><line x1="604.8792522741203" y1="135.16370187740108" x2="628.9525224759175" y2="171.35604265082176" class="connection-line strong"></line><line x1="604.8792522741203" y1="135.16370187740108" x2="416.3649581886899" y2="237.44577842261052" class="connection-line strong"></line><line x1="628.9525224759175" y1="171.35604265082176" x2="416.3649581886899" y2="237.44577842261052" class="connection-line strong"></line><line x1="643.8969004036878" y1="146.08228390920158" x2="227.53529419638625" y2="157.93671073264" class="connection-line strong"></line><line x1="643.8969004036878" y1="146.08228390920158" x2="242.07092130899898" y2="340.84511601924106" class="connection-line strong"></line><line x1="643.8969004036878" y1="146.08228390920158" x2="399.9435667521365" y2="272.1400520270716" class="connection-line strong"></line><line x1="227.53529419638625" y1="157.93671073264" x2="242.07092130899898" y2="340.84511601924106" class="connection-line strong"></line><line x1="227.53529419638625" y1="157.93671073264" x2="399.9435667521365" y2="272.1400520270716" class="connection-line strong"></line><line x1="242.07092130899898" y1="340.84511601924106" x2="399.9435667521365" y2="272.1400520270716" class="connection-line strong"></line><line x1="433.17271322441275" y1="194.5126793212956" x2="278.7072321217988" y2="321.4658090066308" class="connection-line strong"></line><line x1="254.84752060671886" y1="313.83825438892154" x2="251.68172237791396" y2="361.70439667727607" class="connection-line strong"></line><line x1="400.754453669351" y1="230.6347130724177" x2="627.0281132190598" y2="275.3826626856146" class="connection-line strong"></line><line x1="400.754453669351" y1="230.6347130724177" x2="555.7467534144474" y2="288.0559601384831" class="connection-line strong"></line><line x1="400.754453669351" y1="230.6347130724177" x2="597.5691252424259" y2="280.80407428597977" class="connection-line strong"></line><line x1="400.754453669351" y1="230.6347130724177" x2="611.7959879908452" y2="163.43563174233645" class="connection-line strong"></line><line x1="627.0281132190598" y1="275.3826626856146" x2="555.7467534144474" y2="288.0559601384831" class="connection-line strong"></line><line x1="627.0281132190598" y1="275.3826626856146" x2="597.5691252424259" y2="280.80407428597977" class="connection-line strong"></line><line x1="627.0281132190598" y1="275.3826626856146" x2="611.7959879908452" y2="163.43563174233645" class="connection-line strong"></line><line x1="555.7467534144474" y1="288.0559601384831" x2="597.5691252424259" y2="280.80407428597977" class="connection-line strong"></line><line x1="555.7467534144474" y1="288.0559601384831" x2="611.7959879908452" y2="163.43563174233645" class="connection-line strong"></line><line x1="597.5691252424259" y1="280.80407428597977" x2="611.7959879908452" y2="163.43563174233645" class="connection-line strong"></line><line x1="611.7152030765616" y1="347.4374183036655" x2="409.32817475266836" y2="247.12853491167309" class="connection-line strong"></line><line x1="611.7152030765616" y1="347.4374183036655" x2="604.8855887526538" y2="162.25608392622755" class="connection-line strong"></line><line x1="409.32817475266836" y1="247.12853491167309" x2="604.8855887526538" y2="162.25608392622755" class="connection-line strong"></line><line x1="219.45235261433885" y1="176.0510111974763" x2="417.3199338892218" y2="222.13085363656882" class="connection-line strong"></line><line x1="226.91628546814405" y1="290.57725631706444" x2="237.59390167702685" y2="197.23810035993316" class="connection-line strong"></line><line x1="226.91628546814405" y1="290.57725631706444" x2="424.52407569989214" y2="227.90336276306064" class="connection-line strong"></line><line x1="237.59390167702685" y1="197.23810035993316" x2="424.52407569989214" y2="227.90336276306064" class="connection-line strong"></line><line x1="264.7989520309508" y1="346.3208246102864" x2="227.0680761679249" y2="280.35472155016794" class="connection-line strong"></line><line x1="231.26422558252975" y1="129.43499489246778" x2="216.70638250185544" y2="305.28073512865745" class="connection-line strong"></line><line x1="231.26422558252975" y1="129.43499489246778" x2="602.1210740023079" y2="160.65555246630169" class="connection-line strong"></line><line x1="231.26422558252975" y1="129.43499489246778" x2="416.10476086310183" y2="238.4989101092444" class="connection-line strong"></line><line x1="216.70638250185544" y1="305.28073512865745" x2="602.1210740023079" y2="160.65555246630169" class="connection-line strong"></line><line x1="216.70638250185544" y1="305.28073512865745" x2="416.10476086310183" y2="238.4989101092444" class="connection-line strong"></line><line x1="602.1210740023079" y1="160.65555246630169" x2="416.10476086310183" y2="238.4989101092444" class="connection-line strong"></line><line x1="604.9944318659367" y1="316.41956946600476" x2="258.66559152525355" y2="325.90444607593395" class="connection-line strong"></line><line x1="604.9944318659367" y1="316.41956946600476" x2="410.4963010792403" y2="230.53856422163287" class="connection-line strong"></line><line x1="258.66559152525355" y1="325.90444607593395" x2="410.4963010792403" y2="230.53856422163287" class="connection-line strong"></line><line x1="214.7410351257208" y1="308.40576640460745" x2="173.45466487600478" y2="313.85333902625433" class="connection-line strong"></line><line x1="214.7410351257208" y1="308.40576640460745" x2="627.7063066904344" y2="119.11010938392371" class="connection-line strong"></line><line x1="214.7410351257208" y1="308.40576640460745" x2="588.2585536341358" y2="330.95164368785083" class="connection-line strong"></line><line x1="173.45466487600478" y1="313.85333902625433" x2="627.7063066904344" y2="119.11010938392371" class="connection-line strong"></line><line x1="173.45466487600478" y1="313.85333902625433" x2="588.2585536341358" y2="330.95164368785083" class="connection-line strong"></line><line x1="627.7063066904344" y1="119.11010938392371" x2="588.2585536341358" y2="330.95164368785083" class="connection-line strong"></line><line x1="194.12794747694596" y1="120.75831411415354" x2="423.6418171656612" y2="237.64382633666858" class="connection-line strong"></line><line x1="412.54834486498964" y1="229.49510177217348" x2="221.6218486337257" y2="174.70003228819266" class="connection-line strong"></line><line x1="233.5059514353061" y1="259.150729744301" x2="239.32935384735913" y2="340.5155377766649" class="connection-line strong"></line><line x1="180.1152831025259" y1="167.23344598580752" x2="568.5159683700572" y2="149.8914663987449" class="connection-line strong"></line><line x1="226.91628546814405" y1="290.57725631706444" x2="597.5691252424259" y2="280.80407428597977" class="connection-line"></line><line x1="597.5691252424259" y1="280.80407428597977" x2="430.0139241061833" y2="224.60756245702456" class="connection-line"></line><line x1="430.0139241061833" y1="224.60756245702456" x2="593.5403339934117" y2="127.47774197285094" class="connection-line"></line><line x1="593.5403339934117" y1="127.47774197285094" x2="619.6434971152273" y2="271.78963577148966" class="connection-line"></line><line x1="619.6434971152273" y1="271.78963577148966" x2="254.84752060671886" y2="313.83825438892154" class="connection-line"></line><line x1="254.84752060671886" y1="313.83825438892154" x2="613.7472277937541" y2="312.6877945896914" class="connection-line"></line><line x1="613.7472277937541" y1="312.6877945896914" x2="417.98001306177235" y2="237.37738232507712" class="connection-line"></line><line x1="417.98001306177235" y1="237.37738232507712" x2="239.32935384735913" y2="340.5155377766649" class="connection-line"></line><line x1="239.32935384735913" y1="340.5155377766649" x2="228.01054195844463" y2="314.49039453308905" class="connection-line"></line><line x1="228.01054195844463" y1="314.49039453308905" x2="177.6174734280655" y2="180.28544101822013" class="connection-line"></line><line x1="177.6174734280655" y1="180.28544101822013" x2="417.3199338892218" y2="222.13085363656882" class="connection-line"></line><line x1="417.3199338892218" y1="222.13085363656882" x2="604.9944318659367" y2="316.41956946600476" class="connection-line"></line><line x1="604.9944318659367" y1="316.41956946600476" x2="433.17271322441275" y2="194.5126793212956" class="connection-line"></line><line x1="433.17271322441275" y1="194.5126793212956" x2="227.41593022479927" y2="337.0393381628683" class="connection-line"></line><line x1="227.41593022479927" y1="337.0393381628683" x2="278.7072321217988" y2="321.4658090066308" class="connection-line"></line><line x1="278.7072321217988" y1="321.4658090066308" x2="557.7112466700895" y2="285.02040807085166" class="connection-line"></line><line x1="557.7112466700895" y1="285.02040807085166" x2="437.7470141325734" y2="271.6445850816192" class="connection-line"></line><line x1="437.7470141325734" y1="271.6445850816192" x2="399.00988926216644" y2="276.4938520131343" class="connection-line"></line><line x1="399.00988926216644" y1="276.4938520131343" x2="637.7789474137683" y2="188.6035367261252" class="connection-line"></line><line x1="637.7789474137683" y1="188.6035367261252" x2="173.45466487600478" y2="313.85333902625433" class="connection-line"></line><line x1="173.45466487600478" y1="313.85333902625433" x2="221.10534904695268" y2="206.3143320085004" class="connection-line"></line><line x1="221.10534904695268" y1="206.3143320085004" x2="643.8969004036878" y2="146.08228390920158" class="connection-line"></line><line x1="643.8969004036878" y1="146.08228390920158" x2="425.3900247138976" y2="204.58624166985055" class="connection-line"></line><line x1="425.3900247138976" y1="204.58624166985055" x2="588.1464802116557" y2="356.49365485435936" class="connection-line"></line><line x1="588.1464802116557" y1="356.49365485435936" x2="400.754453669351" y2="230.6347130724177" class="connection-line"></line><line x1="400.754453669351" y1="230.6347130724177" x2="413.934465967557" y2="245.36333473684664" class="connection-line"></line><line x1="413.934465967557" y1="245.36333473684664" x2="399.9435667521365" y2="272.1400520270716" class="connection-line"></line><line x1="399.9435667521365" y1="272.1400520270716" x2="602.1210740023079" y2="160.65555246630169" class="connection-line"></line><line x1="602.1210740023079" y1="160.65555246630169" x2="412.54834486498964" y2="229.49510177217348" class="connection-line"></line><line x1="412.54834486498964" y1="229.49510177217348" x2="562.7590327873195" y2="201.88175564263705" class="connection-line"></line><line x1="562.7590327873195" y1="201.88175564263705" x2="599.6442779755312" y2="159.12719558145358" class="connection-line"></line><line x1="599.6442779755312" y1="159.12719558145358" x2="603.7606104888949" y2="155.50855375072928" class="connection-line"></line><line x1="603.7606104888949" y1="155.50855375072928" x2="404.2449986224543" y2="235.712751256498" class="connection-line"></line><line x1="404.2449986224543" y1="235.712751256498" x2="233.5059514353061" y2="259.150729744301" class="connection-line"></line><line x1="233.5059514353061" y1="259.150729744301" x2="594.2979443121266" y2="154.1338223311383" class="connection-line"></line><line x1="594.2979443121266" y1="154.1338223311383" x2="611.4878874649318" y2="161.30851343690142" class="connection-line"></line><line x1="611.4878874649318" y1="161.30851343690142" x2="410.4963010792403" y2="230.53856422163287" class="connection-line"></line><line x1="410.4963010792403" y1="230.53856422163287" x2="567.3624202967276" y2="111.38219289971904" class="connection-line"></line><line x1="567.3624202967276" y1="111.38219289971904" x2="400.5723721023478" y2="230.44910459368845" class="connection-line"></line><line x1="400.5723721023478" y1="230.44910459368845" x2="416.3649581886899" y2="237.44577842261052" class="connection-line"></line></svg>
  
  <!-- Legend -->
  <div class="constellation-legend" style="display: block;">
    <div class="legend-title">Deal Status</div>
    <div class="legend-items">
      <div class="legend-item">
        <div class="legend-star legend-prospect"></div>
        <span>Prospect</span>
      </div>
      <div class="legend-item">
        <div class="legend-star legend-qualified"></div>
        <span>Qualified</span>
      </div>
      <div class="legend-item">
        <div class="legend-star legend-proposal"></div>
        <span>Proposal</span>
      </div>
      <div class="legend-item">
        <div class="legend-star legend-negotiation"></div>
        <span>Negotiation</span>
      </div>
      <div class="legend-item">
        <div class="legend-star legend-closedwon"></div>
        <span>Closed Won</span>
      </div>
    </div>
  </div>
  
  <!-- Controls -->
  <div class="constellation-controls" style="display: flex;">
    <button class="control-btn" id="zoomIn">🔍+</button>
    <button class="control-btn" id="zoomOut">🔍-</button>
    <button class="control-btn" id="resetView">⌂</button>
    <button class="control-btn" id="toggleConnections">⚡</button>
  </div>
</div>

<!-- Deal Detail Panel -->
<div class="deal-detail-panel" id="dealDetailPanel">
  <div class="panel-header">
    <h3 class="deal-title"></h3>
    <button class="close-btn" id="closePanel">×</button>
  </div>
  <div class="panel-content">
    <div class="deal-info">
      <div class="info-row">
        <span class="label">Client:</span>
        <span class="value deal-client"></span>
      </div>
      <div class="info-row">
        <span class="label">Value:</span>
        <span class="value deal-value"></span>
      </div>
      <div class="info-row">
        <span class="label">Status:</span>
        <span class="value deal-status"></span>
      </div>
      <div class="info-row">
        <span class="label">Probability:</span>
        <span class="value deal-probability"></span>
      </div>
      <div class="info-row">
        <span class="label">Manager:</span>
        <span class="value deal-manager"></span>
      </div>
    </div>
  </div>
</div>

<!-- Loading State -->
<div class="constellation-loading" id="constellationLoading" style="display: none;">
  <div class="loading-text">Mapping deal universe...</div>
  <div class="loading-stars">
    <div class="loading-star"></div>
    <div class="loading-star"></div>
    <div class="loading-star"></div>
  </div>
</div></div><style>#wrapper .deal-constellation-container {
  font-family: 'Arial', sans-serif;
  background: radial-gradient(ellipse at center, #0f0f23 0%, #050511 70%, #000000 100%);
  border-radius: 12px;
  padding: 24px;
  color: #ffffff;
  position: relative;
  overflow: hidden; /* Contain stars within dark area */
  min-height: 500px;
}

#wrapper .constellation-title {
  color: #00A651;
  margin: 0 0 8px 0;
  font-size: 1.5rem;
  font-weight: 600;
  text-align: center;
  text-shadow: 0 0 10px rgba(0, 166, 81, 0.5);
}

#wrapper .constellation-description {
  color: #b3b3b3;
  font-size: 14px;
  text-align: center;
  margin-bottom: 20px;
  max-width: 600px;
  margin-left: auto;
  margin-right: auto;
}

/* Universe Viewport */
#wrapper .universe-viewport {
  position: relative;
  height: 450px;
  width: 100%;
  border-radius: 8px;
  overflow: hidden; /* This MUST contain stars inside dark area */
  background: inherit;
}

/* Star Field Background */
#wrapper .star-field {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
}

#wrapper .distant-stars {
  position: absolute;
  width: 100%;
  height: 100%;
  background-image: 
    radial-gradient(2px 2px at 20px 30px, #eee, transparent),
    radial-gradient(1px 1px at 40px 70px, #fff, transparent),
    radial-gradient(1px 1px at 90px 40px, #fff, transparent),
    radial-gradient(2px 2px at 130px 80px, #fff, transparent),
    radial-gradient(1px 1px at 160px 30px, #ddd, transparent);
  background-repeat: repeat;
  background-size: 200px 100px;
  animation: twinkle 4s ease-in-out infinite alternate;
}

@keyframes twinkle {
  0% { opacity: 0.7; }
  100% { opacity: 1; }
}

/* Constellation Canvas */
#wrapper .constellation-canvas {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 10;
  transform-origin: center center;
  transition: transform 0.3s ease;
}

/* Deal Stars */
#wrapper .deal-star {
  position: absolute;
  border-radius: 50%;
  cursor: pointer;
  transition: all 0.3s ease;
  z-index: 20;
  animation: starPulse 3s ease-in-out infinite alternate;
}

@keyframes starPulse {
  0% { transform: scale(1); }
  100% { transform: scale(1.05); }
}

/* Animation intensity configurations */
#wrapper .star-animation-none .deal-star {
  animation: none;
}

#wrapper .star-animation-subtle .deal-star {
  animation: starPulse 6s ease-in-out infinite alternate;
}

#wrapper .star-animation-normal .deal-star {
  animation: starPulse 3s ease-in-out infinite alternate;
}

#wrapper .star-animation-intense .deal-star {
  animation: starPulse 1.5s ease-in-out infinite alternate;
}

#wrapper .deal-star:hover {
  transform: scale(1.3) !important;
  z-index: 30;
}

/* Star Sizes based on deal value */
#wrapper .deal-star.size-small {
  width: 8px;
  height: 8px;
}

#wrapper .deal-star.size-medium {
  width: 12px;
  height: 12px;
}

#wrapper .deal-star.size-large {
  width: 16px;
  height: 16px;
}

#wrapper .deal-star.size-huge {
  width: 20px;
  height: 20px;
}

#wrapper .deal-star.size-mega {
  width: 24px;
  height: 24px;
}

/* Star Colors by Status */
#wrapper .star-prospect {
  background: radial-gradient(circle, #3b82f6 0%, #1e40af 100%);
  box-shadow: 0 0 15px rgba(59, 130, 246, 0.8), 0 0 30px rgba(59, 130, 246, 0.4);
}

#wrapper .star-qualified {
  background: radial-gradient(circle, #a855f7 0%, #7c3aed 100%);
  box-shadow: 0 0 15px rgba(168, 85, 247, 0.8), 0 0 30px rgba(168, 85, 247, 0.4);
}

#wrapper .star-proposal {
  background: radial-gradient(circle, #fbbf24 0%, #f59e0b 100%);
  box-shadow: 0 0 15px rgba(251, 191, 36, 0.8), 0 0 30px rgba(251, 191, 36, 0.4);
}

#wrapper .star-negotiation {
  background: radial-gradient(circle, #f56565 0%, #e53e3e 100%);
  box-shadow: 0 0 15px rgba(245, 101, 101, 0.8), 0 0 30px rgba(245, 101, 101, 0.4);
}

#wrapper .star-closedwon {
  background: radial-gradient(circle, #00A651 0%, #027a3e 100%);
  box-shadow: 0 0 20px rgba(0, 166, 81, 1), 0 0 40px rgba(0, 166, 81, 0.6);
  animation: victoryPulse 2s ease-in-out infinite alternate;
}

@keyframes victoryPulse {
  0% { 
    transform: scale(1);
    box-shadow: 0 0 20px rgba(0, 166, 81, 1), 0 0 40px rgba(0, 166, 81, 0.6);
  }
  100% { 
    transform: scale(1.1);
    box-shadow: 0 0 25px rgba(0, 166, 81, 1), 0 0 50px rgba(0, 166, 81, 0.8);
  }
}

#wrapper .star-closedlost {
  background: radial-gradient(circle, #dc2626 0%, #991b1b 100%);
  box-shadow: 0 0 10px rgba(220, 38, 38, 0.6), 0 0 20px rgba(220, 38, 38, 0.3);
  opacity: 0.6;
}

/* Connection SVG */
#wrapper .connection-svg {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 5;
  pointer-events: none;
}

#wrapper .connection-line {
  stroke: rgba(0, 166, 81, 0.3);
  stroke-width: 1;
  opacity: 0.7;
  animation: connectionPulse 4s ease-in-out infinite alternate;
}

@keyframes connectionPulse {
  0% { opacity: 0.3; }
  100% { opacity: 0.7; }
}

#wrapper .connection-line.strong {
  stroke: rgba(0, 166, 81, 0.6);
  stroke-width: 2;
}

#wrapper .connection-line.active {
  stroke: rgba(251, 191, 36, 0.8);
  stroke-width: 2;
  animation: activeConnection 2s ease-in-out infinite alternate;
}

@keyframes activeConnection {
  0% { opacity: 0.5; }
  100% { opacity: 1; }
}

/* Legend */
#wrapper .constellation-legend {
  position: absolute;
  top: 20px;
  right: 20px;
  background: rgba(0, 0, 0, 0.7);
  border: 1px solid rgba(0, 166, 81, 0.3);
  border-radius: 8px;
  padding: 12px;
  z-index: 100;
  backdrop-filter: blur(10px);
}

#wrapper .legend-title {
  color: #00A651;
  font-size: 0.85rem;
  font-weight: 600;
  margin-bottom: 8px;
  text-align: center;
}

#wrapper .legend-items {
  display: flex;
  flex-direction: column;
  gap: 4px;
}

#wrapper .legend-item {
  display: flex;
  align-items: center;
  gap: 8px;
  font-size: 0.75rem;
  color: #ffffff;
}

#wrapper .legend-star {
  width: 8px;
  height: 8px;
  border-radius: 50%;
}

#wrapper .legend-prospect { background: #3b82f6; box-shadow: 0 0 6px rgba(59, 130, 246, 0.6); }
#wrapper .legend-qualified { background: #a855f7; box-shadow: 0 0 6px rgba(168, 85, 247, 0.6); }
#wrapper .legend-proposal { background: #fbbf24; box-shadow: 0 0 6px rgba(251, 191, 36, 0.6); }
#wrapper .legend-negotiation { background: #f56565; box-shadow: 0 0 6px rgba(245, 101, 101, 0.6); }
#wrapper .legend-closedwon { background: #00A651; box-shadow: 0 0 8px rgba(0, 166, 81, 0.8); }

/* Controls */
#wrapper .constellation-controls {
  position: absolute;
  bottom: 20px;
  left: 20px;
  display: flex;
  gap: 8px;
  z-index: 100;
}

#wrapper .control-btn {
  background: rgba(0, 166, 81, 0.2);
  border: 1px solid rgba(0, 166, 81, 0.5);
  color: #00A651;
  padding: 8px 12px;
  border-radius: 20px;
  cursor: pointer;
  font-size: 0.85rem;
  transition: all 0.2s ease;
  backdrop-filter: blur(10px);
}

#wrapper .control-btn:hover {
  background: rgba(0, 166, 81, 0.3);
  box-shadow: 0 0 10px rgba(0, 166, 81, 0.4);
}

/* Star Tooltip */
#wrapper .star-tooltip {
  position: absolute;
  background: rgba(0, 0, 0, 0.95);
  border: 1px solid rgba(0, 166, 81, 0.5);
  border-radius: 6px;
  padding: 8px 12px;
  z-index: 9999; /* Higher z-index to ensure visibility */
  pointer-events: none;
  backdrop-filter: blur(10px);
  max-width: 250px;
  font-size: 0.8rem;
  display: none;
}

#wrapper .tooltip-header {
  color: #00A651;
  font-weight: 600;
  margin-bottom: 4px;
  font-size: 0.85rem;
}

#wrapper .tooltip-content {
  color: #ffffff;
}

#wrapper .tooltip-content div {
  margin-bottom: 2px;
}

#wrapper .tooltip-content strong {
  color: #cccccc;
}

/* Deal Detail Panel */
#wrapper .deal-detail-panel {
  position: absolute;
  top: 20px;
  left: 20px;
  width: 300px;
  background: rgba(0, 0, 0, 0.9);
  border: 1px solid rgba(0, 166, 81, 0.5);
  border-radius: 8px;
  z-index: 200;
  backdrop-filter: blur(15px);
  transform: translateX(-320px);
  transition: transform 0.3s ease;
}

#wrapper .deal-detail-panel.show {
  transform: translateX(0);
}

#wrapper .panel-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 16px;
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

#wrapper .deal-title {
  color: #00A651;
  font-size: 1rem;
  font-weight: 600;
  margin: 0;
}

#wrapper .close-btn {
  background: none;
  border: none;
  color: #ffffff;
  font-size: 1.5rem;
  cursor: pointer;
  padding: 0;
  width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
}

#wrapper .panel-content {
  padding: 16px;
}

#wrapper .info-row {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 12px;
  font-size: 0.85rem;
}

#wrapper .info-row .label {
  color: #cccccc;
  font-weight: 500;
}

#wrapper .info-row .value {
  color: #ffffff;
  font-weight: 600;
}

/* Loading State */
#wrapper .constellation-loading {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
  z-index: 1000;
}

#wrapper .loading-text {
  color: #00A651;
  margin-bottom: 20px;
  font-weight: 500;
  font-size: 1rem;
}

#wrapper .loading-stars {
  display: flex;
  justify-content: center;
  gap: 12px;
}

#wrapper .loading-star {
  width: 12px;
  height: 12px;
  border-radius: 50%;
  background: radial-gradient(circle, #00A651 0%, #027a3e 100%);
  box-shadow: 0 0 15px rgba(0, 166, 81, 0.8);
  animation: loadingPulse 1.5s ease-in-out infinite alternate;
}

#wrapper .loading-star:nth-child(2) {
  animation-delay: 0.3s;
}

#wrapper .loading-star:nth-child(3) {
  animation-delay: 0.6s;
}

@keyframes loadingPulse {
  0% { 
    transform: scale(0.8);
    opacity: 0.5;
  }
  100% { 
    transform: scale(1.2);
    opacity: 1;
  }
}

/* Responsive Design */
@media (max-width: 768px) {
  #wrapper .constellation-legend {
    position: static;
    margin-bottom: 16px;
  }
  
  #wrapper .legend-items {
    flex-direction: row;
    flex-wrap: wrap;
    gap: 8px;
  }
  
  #wrapper .constellation-controls {
    position: static;
    justify-content: center;
    margin-top: 16px;
  }
  
  #wrapper .deal-detail-panel {
    width: calc(100% - 40px);
    left: 20px;
    transform: translateY(-100%);
  }
  
  #wrapper .deal-detail-panel.show {
    transform: translateY(0);
  }
}</style><script type="module">const configuration = {"galaxyLayout":"clustered","starAnimation":"intense","showLegend":true,"interactiveZoom":true,"showConnections":true}; const fragmentElement = document.querySelector('#fragment-404b8dff-e7a9-ee88-64cf-d5a8b03755c7'); const fragmentEntryLinkNamespace = 'gwtr'; const fragmentNamespace = 'gwtr'; const layoutMode = 'view';(function() {
  const LIFERAY_HOST = window.location.origin;
  
  // Get configuration from Liferay fragment configuration
  const config = typeof configuration !== 'undefined' ? configuration : {
    showConnections: true,
    starAnimation: 'normal',
    galaxyLayout: 'spiral',
    showLegend: true,
    interactiveZoom: true
  };
  
  // Deal Constellation Controller
  class DealConstellation {
    constructor(containerElement) {
      this.container = containerElement;
      this.deals = [];
      this.stars = [];
      this.connections = [];
      this.canvas = this.container.querySelector('#constellationCanvas');
      this.svg = this.container.querySelector('#connectionSvg');
      this.detailPanel = this.container.querySelector('#dealDetailPanel');
      this.loading = this.container.querySelector('#constellationLoading');
      
      this.zoomLevel = 1;
      this.panX = 0;
      this.panY = 0;
      this.showConnections = config.showConnections;
      this.selectedStar = null;
      
      this.init();
    }
    
    async init() {
      try {
        await this.loadDeals();
        this.setupRenderController();
        this.setupEventListeners();
        this.hideLoading();
      } catch (error) {
        console.error('Failed to initialize Deal Constellation:', error);
        this.showError();
      }
    }
    
    async loadDeals() {
      try {
        this.deals = [];
        let page = 1;
        let hasMorePages = true;
        const pageSize = 20; // Default Liferay page size
        
        // Fetch all pages of deals
        while (hasMorePages) {
          const response = await fetch(`${LIFERAY_HOST}/o/c/maestrodeals?page=${page}&pageSize=${pageSize}&p_auth=${Liferay.authToken}`, {
            method: 'GET',
            headers: {
              'Content-Type': 'application/json'
            }
          });
          
          if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
          }
          
          const data = await response.json();
          const pageDeals = data.items || [];
          
          if (pageDeals.length > 0) {
            // Normalize deal data structure
            const normalizedDeals = pageDeals.map(deal => this.normalizeDeal(deal));
            this.deals.push(...normalizedDeals);
            page++;
            
            // Check if we have more pages (if we got less than pageSize, we're done)
            hasMorePages = pageDeals.length === pageSize;
          } else {
            hasMorePages = false;
          }
        }
        
        // If no data from API, use sample data for demonstration
        if (this.deals.length === 0) {
          this.deals = this.getSampleDeals();
        }
        
        console.log(`Loaded ${this.deals.length} deals for constellation visualization (${page - 1} pages)`);
      } catch (error) {
        console.error('Error loading deals, using sample data:', error);
        this.deals = this.getSampleDeals();
      }
    }
    
    normalizeDeal(deal) {
      // Handle Liferay object field structure where some fields are {key, name} objects
      return {
        dealName: deal.dealName || 'Unknown Deal',
        clientName: deal.clientName || 'Unknown Client',
        dealValue: parseFloat(deal.dealValue) || 0,
        dealStatus: deal.dealStatus?.key || deal.dealStatus || 'prospect',
        dealProbability: parseFloat(deal.dealProbability) || 0,
        priority: deal.priority?.key || deal.priority || 'medium',
        relationshipManager: deal.relationshipManager || 'Unknown Manager',
        expectedClosingDate: deal.expectedClosingDate || '',
        lastUpdated: deal.lastUpdated || '',
        dealType: deal.dealType?.key || deal.dealType || 'Unknown',
        sector: deal.sector?.key || deal.sector || 'Unknown'
      };
    }
    
    getSampleDeals() {
      return [
        {
          dealName: "Air France-KLM Digital Project",
          clientName: "Air France-KLM", 
          dealValue: 1140348138,
          dealStatus: "prospect",
          dealProbability: 25,
          relationshipManager: "Marie Dubois"
        },
        {
          dealName: "Intesa Sanpaolo Sustainability",
          clientName: "Intesa Sanpaolo",
          dealValue: 568427960,
          dealStatus: "qualified", 
          dealProbability: 65,
          relationshipManager: "Isabelle Roux"
        },
        {
          dealName: "Schneider Electric Expansion",
          clientName: "Schneider Electric",
          dealValue: 890000000,
          dealStatus: "proposal",
          dealProbability: 80,
          relationshipManager: "Philippe Martin"
        },
        {
          dealName: "Total Energies Green Finance",
          clientName: "Total Energies",
          dealValue: 1250000000,
          dealStatus: "negotiation",
          dealProbability: 90,
          relationshipManager: "Sophie Blanc"
        },
        {
          dealName: "Vivendi Media Partnership",
          clientName: "Vivendi",
          dealValue: 420000000,
          dealStatus: "closedwon",
          dealProbability: 100,
          relationshipManager: "Jean Moreau"
        },
        {
          dealName: "Failed Telecom Deal",
          clientName: "Orange",
          dealValue: 75000000,
          dealStatus: "closedlost",
          dealProbability: 0,
          relationshipManager: "Claire Petit"
        },
        {
          dealName: "BNP Paribas Digital Bank",
          clientName: "BNP Paribas",
          dealValue: 2400000000,
          dealStatus: "negotiation",
          dealProbability: 85,
          relationshipManager: "Antoine Durand"
        },
        {
          dealName: "Carrefour Supply Chain",
          clientName: "Carrefour",
          dealValue: 650000000,
          dealStatus: "qualified",
          dealProbability: 70,
          relationshipManager: "Nathalie Girard"
        },
        {
          dealName: "Sanofi Research Grant",
          clientName: "Sanofi",
          dealValue: 980000000,
          dealStatus: "proposal",
          dealProbability: 75,
          relationshipManager: "Laurent Bernard"
        },
        {
          dealName: "Airbus Innovation Fund",
          clientName: "Airbus",
          dealValue: 1800000000,
          dealStatus: "negotiation",
          dealProbability: 95,
          relationshipManager: "Céline Dubois"
        }
      ];
    }
    
    setupRenderController() {
      const viewport = this.container.querySelector('.universe-viewport');
      if (!viewport) {
        console.error('Universe viewport not found');
        return;
      }

      // ResizeObserver for robust dimension tracking
      this.resizeObserver = new ResizeObserver((entries) => {
        for (const entry of entries) {
          const { width, height } = entry.contentRect;
          if (width > 0 && height > 0) {
            console.log(`🌟 VIEWPORT RESIZED: ${width}x${height}`);
            this.render(width, height);
          }
        }
      });

      this.resizeObserver.observe(viewport);
      
      // Initial render if dimensions are already available
      if (viewport.clientWidth > 0 && viewport.clientHeight > 0) {
        this.render(viewport.clientWidth, viewport.clientHeight);
      }
    }

    render(viewportWidth, viewportHeight) {
      // Apply padding to ensure stars stay well inside the universe viewport
      const padding = 30; // Reduced padding since container overflow is now hidden
      const canvasWidth = Math.max(viewportWidth - (padding * 2), 200);
      const canvasHeight = Math.max(viewportHeight - (padding * 2), 200);
      
      console.log(`🎯 RENDERING: viewport ${viewportWidth}x${viewportHeight} → canvas ${canvasWidth}x${canvasHeight} (${padding}px padding)`);
      
      // Clear existing stars
      this.canvas.innerHTML = '';
      this.stars = [];
      
      // Position deals using spiral galaxy pattern
      this.deals.forEach((deal, index) => {
        const star = this.createStar(deal, index, canvasWidth, canvasHeight, padding);
        this.canvas.appendChild(star.element);
        this.stars.push(star);
      });
      
      console.log(`✅ Created ${this.stars.length} stars inside ${canvasWidth}x${canvasHeight} canvas area`);
      
      // Create connections AFTER stars are built
      this.createConnections();
      
      // Set up event handlers for all stars
      this.setupStarEventHandlers();
    }
    
    createStar(deal, index, canvasWidth, canvasHeight, padding) {
      const element = document.createElement('div');
      element.className = 'deal-star';
      
      // Determine size based on deal value
      const dealValue = parseFloat(deal.dealValue) || 0;
      let sizeClass = 'size-small';
      if (dealValue > 50000000) sizeClass = 'size-mega';
      else if (dealValue > 20000000) sizeClass = 'size-huge';
      else if (dealValue > 10000000) sizeClass = 'size-large';
      else if (dealValue > 5000000) sizeClass = 'size-medium';
      
      // Determine color based on status
      const status = deal.dealStatus?.toLowerCase() || 'prospect';
      const colorClass = `star-${status}`;
      
      element.className += ` ${sizeClass} ${colorClass}`;
      
      // Position using selected galaxy layout algorithm
      const position = this.calculatePosition(index, this.deals.length, canvasWidth, canvasHeight, dealValue);
      
      // Add padding offset to position inside the viewport
      element.style.left = (position.x + padding) + 'px';
      element.style.top = (position.y + padding) + 'px';
      
      console.log(`⭐ Star ${index}: ${deal.dealName} → (${position.x + padding}, ${position.y + padding}) in ${canvasWidth + padding * 2}x${canvasHeight + padding * 2} viewport`);
      
      // Store deal data
      element.dealData = deal;
      
      return {
        element: element,
        deal: deal,
        x: position.x + padding,
        y: position.y + padding,
        size: this.getSizeValue(sizeClass),
        status: status
      };
    }
    
    calculatePosition(index, total, canvasWidth, canvasHeight, dealValue) {
      switch (config.galaxyLayout) {
        case 'scattered':
          return this.calculateScatteredPosition(index, total, canvasWidth, canvasHeight, dealValue);
        case 'clustered':
          return this.calculateClusteredPosition(index, total, canvasWidth, canvasHeight, dealValue);
        default: // 'spiral'
          return this.calculateSpiralPosition(index, total, canvasWidth, canvasHeight, dealValue);
      }
    }
    
    calculateSpiralPosition(index, total, canvasWidth, canvasHeight, dealValue) {
      const centerX = canvasWidth / 2;
      const centerY = canvasHeight / 2;
      
      // Create spiral arms based on deal status
      const spiralArms = 5;
      const armIndex = index % spiralArms;
      const armAngle = (armIndex * 2 * Math.PI) / spiralArms;
      
      // Distance from center based on deal progress and value
      const maxRadius = Math.min(canvasWidth, canvasHeight) * 0.4;
      const progressFactor = this.getProgressFactor(index, total);
      const valueFactor = Math.log(dealValue + 1) / Math.log(100000000); // Normalize large values
      const radius = (progressFactor * 0.7 + valueFactor * 0.3) * maxRadius;
      
      // Add spiral twist
      const spiralTight = 0.3;
      const angle = armAngle + (radius * spiralTight);
      
      // Add some randomness for organic feel
      const randomOffset = 20;
      const randomAngle = Math.random() * Math.PI * 2;
      const randomRadius = Math.random() * randomOffset;
      
      const x = centerX + Math.cos(angle) * radius + Math.cos(randomAngle) * randomRadius;
      const y = centerY + Math.sin(angle) * radius + Math.sin(randomAngle) * randomRadius;
      
      // Keep within bounds
      return {
        x: Math.max(20, Math.min(canvasWidth - 40, x)),
        y: Math.max(20, Math.min(canvasHeight - 40, y))
      };
    }
    
    getProgressFactor(index, total) {
      // Distribute based on index with some clustering
      const base = index / total;
      const cluster = Math.sin(base * Math.PI * 3) * 0.2; // Create clusters
      return Math.max(0.1, Math.min(0.9, base + cluster));
    }
    
    calculateScatteredPosition(index, total, canvasWidth, canvasHeight, dealValue) {
      // Random but weighted by value
      const padding = 30;
      const valueFactor = Math.log(dealValue + 1) / Math.log(100000000);
      
      // Higher value deals get better positions (center area)
      const centerWeight = valueFactor * 0.6 + 0.2;
      const centerX = canvasWidth / 2;
      const centerY = canvasHeight / 2;
      const maxRadius = Math.min(canvasWidth, canvasHeight) * 0.4;
      
      const angle = Math.random() * Math.PI * 2;
      const radius = (1 - centerWeight) * maxRadius + Math.random() * maxRadius * 0.3;
      
      const x = centerX + Math.cos(angle) * radius;
      const y = centerY + Math.sin(angle) * radius;
      
      return {
        x: Math.max(padding, Math.min(canvasWidth - padding, x)),
        y: Math.max(padding, Math.min(canvasHeight - padding, y))
      };
    }
    
    calculateClusteredPosition(index, total, canvasWidth, canvasHeight, dealValue) {
      // Group by deal status for clustering
      const padding = 30;
      const clusterCenters = [
        { x: canvasWidth * 0.25, y: canvasHeight * 0.3 }, // Prospect cluster
        { x: canvasWidth * 0.75, y: canvasHeight * 0.3 }, // Qualified cluster
        { x: canvasWidth * 0.25, y: canvasHeight * 0.7 }, // Proposal cluster
        { x: canvasWidth * 0.75, y: canvasHeight * 0.7 }, // Negotiation cluster
        { x: canvasWidth * 0.5, y: canvasHeight * 0.5 }   // Closed deals center
      ];
      
      const statusOrder = ['prospect', 'qualified', 'proposal', 'negotiation', 'closedwon'];
      const deal = this.deals[index];
      const status = deal.dealStatus?.toLowerCase() || 'prospect';
      const clusterIndex = statusOrder.indexOf(status);
      const center = clusterCenters[clusterIndex] || clusterCenters[0];
      
      // Add randomness within cluster
      const clusterRadius = 60;
      const angle = Math.random() * Math.PI * 2;
      const radius = Math.random() * clusterRadius;
      
      const x = center.x + Math.cos(angle) * radius;
      const y = center.y + Math.sin(angle) * radius;
      
      return {
        x: Math.max(padding, Math.min(canvasWidth - padding, x)),
        y: Math.max(padding, Math.min(canvasHeight - padding, y))
      };
    }
    
    getSizeValue(sizeClass) {
      const sizes = {
        'size-small': 8,
        'size-medium': 12,
        'size-large': 16,
        'size-huge': 20,
        'size-mega': 24
      };
      return sizes[sizeClass] || 8;
    }
    
    createConnections() {
      if (!this.showConnections) return;
      
      // Clear existing connections
      this.svg.innerHTML = '';
      this.connections = [];
      
      // Create connections between deals of the same client
      const clientGroups = this.groupByClient();
      
      Object.keys(clientGroups).forEach(clientName => {
        const clientDeals = clientGroups[clientName];
        if (clientDeals.length > 1) {
          this.connectStars(clientDeals);
        }
      });
      
      // Create weak connections between similar value deals
      this.createValueConnections();
    }
    
    groupByClient() {
      const groups = {};
      this.stars.forEach(star => {
        const clientName = star.deal.clientName || 'Unknown';
        if (!groups[clientName]) {
          groups[clientName] = [];
        }
        groups[clientName].push(star);
      });
      return groups;
    }
    
    connectStars(stars) {
      for (let i = 0; i < stars.length - 1; i++) {
        for (let j = i + 1; j < stars.length; j++) {
          const line = this.createConnectionLine(stars[i], stars[j], 'strong');
          this.svg.appendChild(line);
          this.connections.push(line);
        }
      }
    }
    
    createValueConnections() {
      // Connect deals with similar values (loose connections)
      const sortedStars = [...this.stars].sort((a, b) => {
        const valueA = parseFloat(a.deal.dealValue) || 0;
        const valueB = parseFloat(b.deal.dealValue) || 0;
        return valueB - valueA;
      });
      
      // Create connections between every 3rd similar-value deal
      for (let i = 0; i < sortedStars.length - 3; i += 3) {
        const star1 = sortedStars[i];
        const star2 = sortedStars[i + 3];
        
        const value1 = parseFloat(star1.deal.dealValue) || 0;
        const value2 = parseFloat(star2.deal.dealValue) || 0;
        
        // Only connect if values are within similar range
        if (Math.abs(value1 - value2) / Math.max(value1, value2) < 0.5) {
          const line = this.createConnectionLine(star1, star2, 'weak');
          this.svg.appendChild(line);
          this.connections.push(line);
        }
      }
    }
    
    createConnectionLine(star1, star2, strength) {
      const line = document.createElementNS('http://www.w3.org/2000/svg', 'line');
      
      line.setAttribute('x1', star1.x + star1.size / 2);
      line.setAttribute('y1', star1.y + star1.size / 2);
      line.setAttribute('x2', star2.x + star2.size / 2);
      line.setAttribute('y2', star2.y + star2.size / 2);
      line.classList.add('connection-line');
      
      if (strength === 'strong') {
        line.classList.add('strong');
      }
      
      return line;
    }
    
    setupEventListeners() {
      // Control buttons
      const zoomIn = this.container.querySelector('#zoomIn');
      const zoomOut = this.container.querySelector('#zoomOut');
      const resetView = this.container.querySelector('#resetView');
      const toggleConnections = this.container.querySelector('#toggleConnections');
      const closePanel = this.container.querySelector('#closePanel');
      
      zoomIn?.addEventListener('click', () => this.zoom(1.2));
      zoomOut?.addEventListener('click', () => this.zoom(0.8));
      resetView?.addEventListener('click', () => this.resetView());
      toggleConnections?.addEventListener('click', () => this.toggleConnections());
      closePanel?.addEventListener('click', () => this.hideDealDetails());
    }
    
    setupStarEventHandlers() {
      // Star interaction events - set up after stars are created
      this.stars.forEach(star => {
        star.element.addEventListener('click', (e) => {
          e.stopPropagation();
          this.selectStar(star);
          this.showDealDetails(star.deal);
          console.log('Star clicked:', star.deal.dealName);
        });
        
        star.element.addEventListener('mouseenter', (e) => {
          this.highlightConnectedStars(star);
          this.showTooltip(star, e);
        });
        
        star.element.addEventListener('mouseleave', () => {
          this.clearHighlights();
          this.hideTooltip();
        });
      });
    }
    
    showTooltip(star, event) {
      console.log('Showing tooltip for:', star.deal.dealName);
      
      // Create tooltip element in document.body to avoid clipping
      let tooltip = document.body.querySelector('.constellation-star-tooltip');
      if (!tooltip) {
        console.log('Creating new tooltip element in body');
        tooltip = document.createElement('div');
        tooltip.className = 'constellation-star-tooltip';
        tooltip.style.cssText = `
          position: fixed;
          background: rgba(0, 0, 0, 0.95);
          border: 1px solid rgba(0, 166, 81, 0.5);
          border-radius: 6px;
          padding: 8px 12px;
          z-index: 99999;
          pointer-events: none;
          backdrop-filter: blur(10px);
          max-width: 250px;
          font-size: 0.8rem;
          color: white;
          font-family: Arial, sans-serif;
          display: none;
        `;
        document.body.appendChild(tooltip);
      }
      
      // Update tooltip content
      const deal = star.deal;
      tooltip.innerHTML = `
        <div style="color: #00A651; font-weight: 600; margin-bottom: 4px; font-size: 0.85rem;">
          ${deal.dealName || 'Unknown Deal'}
        </div>
        <div style="color: #ffffff;">
          <div style="margin-bottom: 2px;"><strong style="color: #cccccc;">Client:</strong> ${deal.clientName || 'Unknown'}</div>
          <div style="margin-bottom: 2px;"><strong style="color: #cccccc;">Value:</strong> ${this.formatCurrency(parseFloat(deal.dealValue) || 0)}</div>
          <div style="margin-bottom: 2px;"><strong style="color: #cccccc;">Status:</strong> ${deal.dealStatus || 'Unknown'}</div>
          <div><strong style="color: #cccccc;">Probability:</strong> ${deal.dealProbability || 0}%</div>
        </div>
      `;
      
      // Position tooltip using getBoundingClientRect for accurate positioning
      const rect = star.element.getBoundingClientRect();
      const tooltipWidth = 250; // max-width
      const tooltipHeight = 100; // estimated height
      
      // Position to the right of the star, but clamp within viewport
      let left = rect.right + 10;
      let top = rect.top;
      
      // Clamp to viewport boundaries
      if (left + tooltipWidth > window.innerWidth) {
        left = rect.left - tooltipWidth - 10; // Show on left side
      }
      if (top + tooltipHeight > window.innerHeight) {
        top = window.innerHeight - tooltipHeight - 10;
      }
      if (left < 0) left = 10;
      if (top < 0) top = 10;
      
      tooltip.style.left = left + 'px';
      tooltip.style.top = top + 'px';
      tooltip.style.display = 'block';
      tooltip.style.opacity = '1';
      tooltip.style.visibility = 'visible';
      
      console.log(`✅ Tooltip positioned at (${left}, ${top}) for star at (${rect.left}, ${rect.top})`);
    }
    
    hideTooltip() {
      const tooltip = document.body.querySelector('.constellation-star-tooltip');
      if (tooltip) {
        tooltip.style.display = 'none';
        tooltip.style.opacity = '0';
        tooltip.style.visibility = 'hidden';
        console.log('Tooltip hidden');
      }
    }
    
    selectStar(star) {
      // Clear previous selection
      this.stars.forEach(s => s.element.classList.remove('selected'));
      
      // Select new star
      star.element.classList.add('selected');
      this.selectedStar = star;
    }
    
    showDealDetails(deal) {
      const clientName = deal.clientName || 'Unknown Client';
      const dealValue = parseFloat(deal.dealValue) || 0;
      const status = deal.dealStatus || 'Unknown';
      const probability = deal.dealProbability || 0;
      const manager = deal.relationshipManager || 'Unassigned';
      
      this.detailPanel.querySelector('.deal-title').textContent = deal.dealId || 'Deal';
      this.detailPanel.querySelector('.deal-client').textContent = clientName;
      this.detailPanel.querySelector('.deal-value').textContent = this.formatCurrency(dealValue);
      this.detailPanel.querySelector('.deal-status').textContent = status;
      this.detailPanel.querySelector('.deal-probability').textContent = probability + '%';
      this.detailPanel.querySelector('.deal-manager').textContent = manager;
      
      this.detailPanel.classList.add('show');
    }
    
    hideDealDetails() {
      this.detailPanel.classList.remove('show');
      if (this.selectedStar) {
        this.selectedStar.element.classList.remove('selected');
        this.selectedStar = null;
      }
    }
    
    highlightConnectedStars(targetStar) {
      // Find connections involving this star
      const connectedLines = Array.from(this.svg.querySelectorAll('.connection-line'));
      const targetX = targetStar.x + targetStar.size / 2;
      const targetY = targetStar.y + targetStar.size / 2;
      
      connectedLines.forEach(line => {
        const x1 = parseInt(line.getAttribute('x1'));
        const y1 = parseInt(line.getAttribute('y1'));
        const x2 = parseInt(line.getAttribute('x2'));
        const y2 = parseInt(line.getAttribute('y2'));
        
        if ((Math.abs(x1 - targetX) < 5 && Math.abs(y1 - targetY) < 5) ||
            (Math.abs(x2 - targetX) < 5 && Math.abs(y2 - targetY) < 5)) {
          line.classList.add('active');
        }
      });
    }
    
    clearHighlights() {
      const activeLines = this.svg.querySelectorAll('.connection-line.active');
      activeLines.forEach(line => line.classList.remove('active'));
    }
    
    zoom(factor) {
      this.zoomLevel *= factor;
      this.zoomLevel = Math.max(0.5, Math.min(3, this.zoomLevel));
      this.updateTransform();
    }
    
    resetView() {
      this.zoomLevel = 1;
      this.panX = 0;
      this.panY = 0;
      this.updateTransform();
    }
    
    updateTransform() {
      const transform = `translate(${this.panX}px, ${this.panY}px) scale(${this.zoomLevel})`;
      this.canvas.style.transform = transform;
      this.svg.style.transform = transform;
    }
    
    toggleConnections() {
      this.showConnections = !this.showConnections;
      if (this.showConnections) {
        this.createConnections();
        this.svg.style.display = 'block';
      } else {
        this.svg.style.display = 'none';
      }
    }
    
    formatCurrency(value) {
      if (value >= 1000000) {
        return '€' + (value / 1000000).toFixed(1) + 'M';
      } else if (value >= 1000) {
        return '€' + (value / 1000).toFixed(0) + 'K';
      } else {
        return '€' + value.toLocaleString();
      }
    }
    
    hideLoading() {
      if (this.loading) {
        this.loading.style.display = 'none';
      }
      
      // Apply configuration settings
      this.applyConfiguration();
    }
    
    applyConfiguration() {
      // Apply legend visibility
      const legend = this.container.querySelector('.constellation-legend');
      if (legend) {
        legend.style.display = config.showLegend ? 'block' : 'none';
      }
      
      // Apply zoom controls visibility
      const controls = this.container.querySelector('.constellation-controls');
      if (controls) {
        controls.style.display = config.interactiveZoom ? 'flex' : 'none';
      }
      
      // Apply star animation intensity
      const animationClasses = ['star-animation-none', 'star-animation-subtle', 'star-animation-normal', 'star-animation-intense'];
      animationClasses.forEach(cls => this.canvas.classList.remove(cls));
      const animationClass = 'star-animation-' + config.starAnimation;
      this.canvas.classList.add(animationClass);
      
      // Apply connection visibility
      if (this.svg) {
        this.svg.style.display = config.showConnections ? 'block' : 'none';
      }
    }
    
    showError() {
      if (this.loading) {
        this.loading.querySelector('.loading-text').textContent = 'Error mapping deal universe';
        this.loading.querySelector('.loading-stars').style.display = 'none';
      }
    }
  }
  
  // Initialize Deal Constellation
  const constellationInstance = new DealConstellation(fragmentElement);
  
  // Handle resize events
  window.addEventListener('resize', () => {
    setTimeout(() => {
      constellationInstance.createStars();
      constellationInstance.createConnections();
    }, 100);
  });
})();;</script></div></div></div>